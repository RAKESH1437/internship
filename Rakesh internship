<uses-permission android:name="android.permission.INTERNET"/>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/rtsp_url"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter RTSP URL" />

    <VideoView
        android:id="@+id/video_view"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:gravity="center">

        <Button
            android:id="@+id/play_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Play" />

        <Button
            android:id="@+id/pause_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Pause" />

        <Button
            android:id="@+id/stop_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Stop" />

    </LinearLayout>
</LinearLayout>

package com.example.rtspstreaming;

import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.VideoView;
import android.widget.MediaController;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private VideoView videoView;
    private EditText rtspUrlEditText;
    private Button playButton;
    private Button pauseButton;
    private Button stopButton;
    private MediaController mediaController;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        videoView = findViewById(R.id.video_view);
        rtspUrlEditText = findViewById(R.id.rtsp_url);
        playButton = findViewById(R.id.play_button);
        pauseButton = findViewById(R.id.pause_button);
        stopButton = findViewById(R.id.stop_button);
        mediaController = new MediaController(this);
        videoView.setMediaController(mediaController);

        playButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String rtspUrl = rtspUrlEditText.getText().toString();
                videoView.setVideoURI(Uri.parse(rtspUrl));
                videoView.start();
            }
        });

        pauseButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (videoView.isPlaying()) {
                    videoView.pause();
                }
            }
        });

        stopButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (videoView.isPlaying()) {
                    videoView.stopPlayback();
                    videoView.resume();
                }
            }
        });
    }
}
videoView.setOnErrorListener(new MediaPlayer.OnErrorListener() {
    @Override
    public boolean onError(MediaPlayer mp, int what, int extra) {
        Toast.makeText(MainActivity.this, "Error occurred while streaming", Toast.LENGTH_SHORT).show();
        return true;
    }
});
# RTSP Video Streaming Application

## Description
This Android application allows users to stream video using the Real-Time Streaming Protocol (RTSP). Users can input the RTSP URL and control the video stream with play, pause, and stop functions.

## Features
- Simple and intuitive user interface
- Play, pause, and stop functionality
- Handles streaming errors gracefully
- Optimized for performance

## Requirements
- Android Studio
- Android device or emulator with internet access

## Setup and Installation
1. Clone the repository:
   ```bash
   git clone https://github.com/your-username/rtsp-video-streaming.git

By following these steps, you should be able to create an RTSP video streaming application that meets the given requirements.

